@import "drawer-variables";
@import "drawer-mixins";

@if not($enable-framework) {
  /*!
   * StrapLess Drawer v1.1.2 (http://github.com/strapless/drawer)
   * Licensed under MIT (https://github.com/strapless/drawer/blob/master/LICENSE)
   */
}

header .navbar-toggler {
  transition: .5s ease-in-out;
  display: flex;
}

nav.drawer {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  width: $drawer-width;
  max-height: 100vh;
  flex-direction: column;
  flex: 0 0 auto;
  // Colors
  background-color: $drawer-bg-color;
  color: $drawer-color;
  @include elevation(2);
  // Hidden by moving off screen
  z-index: const(ZINDEX_MODAL);
  margin-left: -$drawer-width;
  display: flex;
  .drawer-header, .drawer-footer {
    transition: opacity .5s ease-in-out;
    opacity: 1;
    display: block;
  }
}

.on {
  nav.drawer {
    margin-left: 0;
  }
}

.temporary, .persistent {
  nav.drawer {
    transition: margin-left .5s ease-in-out;
  }
}

.persistent, .permanent {
  nav.drawer {
    display: none;
  }
}

// Styles for Drawer Groups
nav.drawer {
  .drawer-link {
    color: $drawer-color;
    text-decoration: none !important;
    @include drawer-icons;
    &:hover, &:focus {
      background-color: gray(200);
      color: $drawer-hover-color;
    }
  }
  .active > .drawer-link, .drawer-link:active {
    color: $drawer-active-color;
  }
  .disabled > .drawer-link, .drawer-link.disabled {
    color: $drawer-disabled-color;
  }
  .drawer-group {
    // Separator between groups
    margin: .25rem 0 0 0;
    padding: 0 0 .25rem 0;
  }
  .drawer-item {
    display: flex !important;
  }
  .drawer-link, .drawer-item > *:not(.drawer-group) {
    padding: 0 1.5rem;
    min-height: $drawer-item-height;
    display: flex;
    flex: 1 0 auto;
    align-items: center;
    flex-direction: row;
  }
  .drawer-item-heading {
    color: $drawer-item-heading-color;
    font-size: .9rem;
    margin: 0;
    text-transform: uppercase;
    letter-spacing: 2px;
  }
  .drawer-body {
    .drawer-group {
      border: 0 solid rgba(black, .125);
      border-top-width: 1px;
      &:first-child {
        border-top-width: 0;
      }
    }
  }
  .drawer-footer {
    .drawer-item:first-child {
      border-top-width: 1px;
    }
  }
}

// Styles for Header/Body/Footer
nav.drawer {
  .drawer-header {
    flex: 0 0 auto;
    background-color: $drawer-header-bg-color;
    [data-toggle] {
      flex: 1 0 auto;
    }
    .account-item {
      flex: 0 1 auto;
      border-bottom: 1px solid rgba(black, .125);
      > a:hover, > a:focus {
        background-color: transparent;
      }
    }
    > a, .account-item > a {
      &:hover, &:focus {
        outline: 0;
        background-color: transparent;
      }
    }
    a.account {
      display: flex;
      align-items: center;
      > .list-unstyled {
        margin-bottom: 0;
      }
      @if component("icons") {
        //noinspection SassScssUnresolvedVariable
        > .#{$icon-css-prefix} {
          margin-left: auto;
          margin-right: -1.25rem;
          opacity: .2;
          flex: 0 1 auto;
        }
      }
    }
  }
  .drawer-body {
    // Make sure we scroll properly
    overflow-y: scroll;
    overflow-x: hidden;
    // Use flex columns for stacking
    display: flex;
    flex-direction: column;
    // Padding only to top and bottom
    padding: $drawer-spacer-y 0;
  }
  .drawer-footer {
    // Push footer to bottom
    margin-top: auto;
  }
  .drawer-hide {
    display: none !important;
  }
}

@include media(">md") {
  .permanent, .persistent {
    nav.drawer {
      display: flex;
    }
  }
  nav.drawer {
    .drawer-header, .drawer-footer {
      opacity: 0;
      display: none;
    }
    margin-left: 0;
    position: relative;
    // Layer below page header and footer.
    max-height: none;
    z-index: 0 !important;
    margin-right: $drawer-spacer-x;
  }
  html.persistent:not(.on) {
    nav.drawer {
      margin-left: -$drawer-width !important;
    }
  }
  html:not(.persistent) {
    header .navbar-toggler {
      // Toggle off by default
      transform: translateX(-100%);
      display: none !important;
    }
  }
  .persistent {
    header .navbar-toggler {
      // Unless we're a persistent drawer, which can be turned on and off.
      transform: translateX(0);
      display: flex !important;
    }
  }
  // Automatically adjust other elements
  $dwu: unit($drawer-width);
  .drawer-padding-adjust {
    transition: padding-left .5s ease-in-out;
    padding-left: $drawer-width + space-x(md, $dwu);
  }
  .drawer-margin-adjust {
    transition: margin-left .5s ease-in-out;
    margin-left: $drawer-width + space-x(md, $dwu);
  }
  .persistent:not(.on) {
    // Unless we're a turned off persistent drawer
    .drawer-padding-adjust {
      padding-left: 0;
    }
    .drawer-margin-adjust {
      margin-left: 0;
    }
  }
}

@include media(">lg") {
  .permanent, .persistent {
    nav.drawer {
      display: flex;
    }
  }
  nav.drawer {
    position: relative;
    display: flex;
    margin-left: 0;
    transition: none;
  }
}

nav.drawer + .container {
  flex: 1 1 auto;
}