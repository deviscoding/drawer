@import "drawer-variables";
@import "drawer-mixins";

@if not($enable-framework) {
  /*!
   * StrapLess Drawer v2.0.3 (http://github.com/strapless/drawer)
   * Licensed under MIT (https://github.com/strapless/drawer/blob/master/LICENSE)
   */
}

.drawer {
  // Borders or Elevation
  @include elevation(16);
  overflow: hidden;
  // Display & Size
  display: flex;
  flex-direction: column;
  flex: 0 0 auto;
  width: $drawer-width;
  // Position
  position: $drawer-default-position;
  left: 0;
  top: 0;
  bottom: 0;
  right: initial;
  z-index: $drawer-default-zindex;
  margin-left: (0 - $drawer-width);
  // Color
  color: $drawer-color;
  background-color: $drawer-bg-color;
  .drawer-header, .drawer-footer {
    display: flex;
  }
}

.drawer-backdrop {
  background-color: rgba($drawer-backdrop-bg, $drawer-backdrop-opacity);
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-modal-backdrop;
}

.drawer, .drawer-margin-adjust {
  transition: margin-left .5s ease-in-out;
}

.drawer-padding-adjust {
  transition: padding-left .5s ease-in-out;
}

.navbar-toggler {
  background-color: transparent;
  border: none;
  display: var(--drawer-toggler-display);
  cursor: pointer;
  &:focus {
    outline: 0;
  }
}

html.on {
  body {
    position: fixed;
    overflow-y: hidden; // prevent scroll when temp drawer is open.
    padding-right: 15px; // prevent jumping content with scrollbar disappear.
  }
  header.header-fixed-top {
    padding-right: 15px; // prevent jumping content with scrollbar disappear.
  }
}

.drawer-header {
  flex: 0 0 auto;
  flex-direction: column;
  justify-content: flex-end;
  min-height: $navbar-height * 2;
  background-color: $drawer-header-bg-color;
  border-bottom: 1px solid rgba($drawer-color, .125);
  overflow:  hidden;
}
.drawer-body {
  min-width: $drawer-width;
  // Make sure we scroll properly
  overflow-y: scroll;
  overflow-x: hidden;
  // Hide the vertical scrollbar by using negative margin.
  margin-right: -17px;
  // Use flex columns for stacking
  display: flex;
  flex-direction: column;
  // Allow to shrink for scrolling on smaller screen.
  flex: 1 1 0%;
  // Padding only to top and bottom
  padding: $drawer-spacer-y 0;
}
.drawer-footer {
  flex: 0 1 auto;
  background-color: $drawer-footer-bg-color;
  color: $drawer-color;
  padding: $drawer-spacer-y $drawer-spacer-x;
}

// Drawer Links
.drawer-link, .drawer-item-heading {
  padding: 0 $drawer-spacer-x;
  min-height: $drawer-item-height;
  display: flex;
  flex: 1 0 auto;
  align-items: center;
  flex-direction: row;
}
.drawer-link {
  color: $drawer-color;
  text-decoration: none !important;
  @include drawer-icons;
  &:hover, &:focus {
    background-color: gray(200);
    color: $drawer-hover-color;
  }
}
.drawer-header {
  .drawer-link {
    cursor: pointer;
    &:hover, &:focus {
      background-color: transparent;
    }
  }
}
.active > .drawer-link, .drawer-link:active {
  color: $drawer-active-color;
}
.disabled > .drawer-link, .drawer-link.disabled {
  color: $drawer-disabled-color;
}
.drawer-item-heading {
  color: $drawer-item-heading-color;
  font-size: .9rem;
  margin: 0;
  text-transform: uppercase;
  letter-spacing: 2px;
}

// Drawer Groups & Items
.drawer-group {
  max-width: $drawer-width;
  // Separator between groups
  margin: .25rem 0 0 0;
  padding: 0; // Any padding causes bounce on collapse
  border: 0 solid rgba($drawer-color, .125);
  border-top-width: 1px;
  display: flex;
  flex-direction: column;
  flex: 0 0 auto;
  &:first-child {
    border-top-width: 0;
  }
}
.drawer-item {
  display: flex !important;
}
.drawer-footer .drawer-item:first-child {
  border-top-width: 1px;
}

// Collapsing Drawer Groups
.drawer-group.drawer-group-collapse {
  display: flex !important;
  flex-direction: row;
  flex-wrap: wrap;
  overflow: hidden;
  > .drawer-item {
    overflow: hidden;
    text-overflow: ellipsis;
    flex: 1 0 100%;
  }
  [data-toggle="collapse-group"] {
    cursor: pointer;
    > .drawer-item-heading {
      position: relative;
      &::before {
        display: block;
        width: $drawer-indicator-size;
        height: $drawer-indicator-size;
        content: " ";
        transform-origin: center center;
        transition-duration: 0.35s;
        position: absolute;
        right: 1rem;
        top: 50%; // Needed for Safari 10, IE10/11
        margin-top: -4px; // Needed for Safari 10, IE10/11
        background: inline-svg($drawer-chevron) center center / $drawer-indicator-size $drawer-indicator-size no-repeat;
      }
    }
  }
}
.drawer-group-collapse[aria-expanded="true"] {
  [data-toggle="collapse-group"] > .drawer-item-heading::before {
    transform: rotate(-180deg);
  }
}
.drawer-group.collapse:not(.show):not(.in) {
  height: 0;
  display: flex !important;
}

// Special Drawer Items
.drawer-account {
  flex: 1 0 auto;
  display: flex;
  align-items: center;
  flex-flow: row wrap;
  padding-top: $drawer-spacer-y;
  padding-bottom: $drawer-spacer-y;
  .list-unstyled {
    margin-bottom: 0;
  }
  [data-toggle="collapse"] {
    background: transparent inline-svg($drawer-caret) no-repeat right 1rem center;
  }
  .drawer-group {
    border-top-width: 0;
    margin: .25rem 0 0 0 !important;
    padding: 0 !important;
    flex-direction: column !important;
    width: 100%;
  }
}

@each $bp, $min in $grid-breakpoints {
  @if $min == 0 {
    @include drawer-temporary($bp);
    @include drawer-persistent($bp);
    @include drawer-permanent($bp);
  } @else {
    @media screen and (min-width: $min) {
      @include drawer-temporary($bp);
      @include drawer-persistent($bp);
      @include drawer-permanent($bp);
    }
  }
}

nav.drawer + .container {
  flex: 1 1 auto;
}